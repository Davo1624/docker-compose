#version: "3.8"
x-base-default: &base-default
  logging:
    driver: local
    options:
      max-file: ${DOCKERLOGGING_MAXFILE}
      max-size: ${DOCKERLOGGING_MAXSIZE}
  restart: unless-stopped
x-base-media: &base-media
  <<: *base-default
  networks:
    - media
x-base-misc: &base-misc
  <<: *base-default
  networks:
    - misc
x-base-pullio: &pullio
  org.hotio.pullio.notify: true
  org.hotio.pullio.update: true
  org.hotio.pullio.generic.webhook: ${PULLIO_GENERIC_WEBHOOK}
x-base-env: &env
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: ${TZ}
  UMASK: 002

services:
  authelia:
    <<: *base-misc
    container_name: authelia
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: ${TZ}
    hostname: authelia.internal
    image: authelia/authelia:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/ZJ17rqR/59122411-s-200-v-4.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/authelia/authelia/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/ZJ17rqR/59122411-s-200-v-4.png"
    volumes:
      - ${CONF_PATH}/authelia:/config
  autobrr:
    <<: *base-media
    container_name: autobrr
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *env
    hostname: autobrr.internal
    image: ghcr.io/autobrr/autobrr:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Q9C23Cn/index.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/autobrr/autobrr/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/Q9C23Cn/index.png"
    #ports:
      #- 8998:8989
    volumes:
      - ${CONF_PATH}/autobrr:/config
      - ${CONF_PATH}/autobrr/definitions:/definitions
  autopulse:
    <<: *base-media
    container_name: autopulse
    depends_on:
      postgres:
         condition: service_healthy
    environment:
      <<: *env
    hostname: autopulse.internal
    image: danonline/autopulse:latest-postgres
    #ports:
      #- 2875:2875
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/v6VQzjLN/autobrr.jpg"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/dan-online/autopulse/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/v6VQzjLN/autobrr.jpg"
    volumes:
      - ${CONF_PATH}/autopulse:/app
      - ${DATA_PATH}:/data
  barassistant:
    <<: *base-misc
    container_name: barassistant
    depends_on:
      - barassistant-meilisearch
      - redis
    environment:
      APP_URL: https://bar.${DOMAIN}/bar
      LOG_CHANNEL: stderr
      MEILISEARCH_KEY: ${MEILI_MASTER_KEY}
      MEILISEARCH_HOST: http://barassistant-meilisearch:7700
      REDIS_HOST: redis
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      ALLOW_REGISTRATION: true
    image: barassistant/server:v4
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/3rTrKtZ/bar-assistant.jpg"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/karlomikus/bar-assistant/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/3rTrKtZ/bar-assistant.jpg"
    volumes:
      - ${CONF_PATH}/barassistant:/var/www/cocktails/storage/bar-assistant
  barassistant-meilisearch:
    <<: *base-misc
    container_name: barassistant-meilisearch
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY}
      MEILI_ENV: production
    image: getmeili/meilisearch:v1.9
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/qpnDpxG/meilisearch.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://hub.docker.com/r/getmeili/meilisearch/tags\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/qpnDpxG/meilisearch.png"
    volumes:
      - ${CONF_PATH}/barassistant/meili:/meili_data
  barassistant-saltrim:
    <<: *base-misc
    container_name: barassistant-saltrim
    depends_on:
      - barassistant
    environment:
      API_URL: https://bar.${DOMAIN}/bar
      MEILISEARCH_URL: https://bar.${DOMAIN}/search
      BAR_NAME: "My House"
      DESCRIPTION: "It's 5:00 somewhere!!"
    image: barassistant/salt-rim:v3
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/3rTrKtZ/bar-assistant.jpg"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/karlomikus/vue-salt-rim/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/3rTrKtZ/bar-assistant.jpg"
  bazarr:
    <<: *base-media
    container_name: bazarr
    environment:
      <<: *env
    hostname: bazarr.internal
    image: ghcr.io/hotio/bazarr:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/6gbNTWG/bazarr.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/morpheus65535/bazarr/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/6gbNTWG/bazarr.png"
    volumes:
      - ${CONF_PATH}/bazarr:/config
      - ${DATA_PATH}/movies/media:/data/movies/media
      - ${DATA_PATH}/tv/media:/data/tv/media
  beszel-agent:
    <<: *base-default
    container_name: beszel-agent
    depends_on:
      wireguard:
        condition: service_healthy
        restart: true
      dockerproxy:
        condition: service_started
    environment:
      <<: *env
      DOCKER_HOST: "tcp://dockerproxy:2375"
      PORT: 45876
      KEY: ${BESZEL_AGENT}
    #hostname: beszel-agent.internal
    image: henrygd/beszel-agent:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/6gbNTWG/bazarr.png"
      org.hotio.pullio.author.url: "https://github.com/henrygd/beszel/releases"
      net.unraid.docker.icon: "https://i.ibb.co/m5N8G4nG/Beszel.png"
    network_mode: service:wireguard
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
  beszel:
    <<: *base-default
    container_name: beszel
    depends_on:
      wireguard:
        condition: service_healthy
        restart: true
    #extra_hosts:
      #- host.docker.internal:host-gateway
    #hostname: beszel.internal
    image: henrygd/beszel:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/6gbNTWG/bazarr.png"
      org.hotio.pullio.author.url: "https://github.com/henrygd/beszel/releases"
      net.unraid.docker.icon: "https://i.ibb.co/m5N8G4nG/Beszel.png"
    network_mode: service:wireguard
    #ports:
      #- 8090:8090
    volumes:
      - ${CONF_PATH}/beszel:/beszel_data
  calibre:
    <<: *base-media
    container_name: calibre
    hostname: calibre.internal
    environment:
      <<: *env
    image: lscr.io/linuxserver/calibre:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/vxtLww6/calibreweb.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/kovidgoyal/calibre/blob/master/Changelog.txt\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/vxtLww6/calibreweb.png"
    ports:
      - 8081:8081
    security_opt:
      - seccomp:unconfined
    volumes:
      - ${CONF_PATH}/calibre:/config
      - ${DATA_PATH}/misc/books/media:/data/misc/books/media
  container-monitor:
    <<: *base-misc
    container_name: container-monitor
    depends_on:
      - dockerproxy
    hostname: container-monitor.internal
    environment:
      DOCKER_API_VERSION: 1.41
      DOCKER_HOST: "tcp://dockerproxy:2375"
      CONTAINERMON_CHECK_STOPPED: false
      CONTAINERMON_NOTIFICATION_URL: "discord://webhook"
    image: ghcr.io/rafhaanshah/container-mon:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/K0bMT9W/docker-healthcheck.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/RafhaanShah/Container-Mon/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/K0bMT9W/docker-healthcheck.png"
    user: ${PUID}:${PGID}
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
  cross-seed-movies:
    <<: *base-media
    command: daemon
    container_name: cross-seed-movies
    depends_on:
      - qbit-movies
      - prowlarr
    hostname: cross-seed-movies.internal
    environment:
      TZ: ${TZ}
    image: crossseed/cross-seed:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Ptyx6sC/crossseed.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/mmgoodnow/cross-seed/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/Ptyx6sC/crossseed.png"
    user: ${PUID}:${PGID}
    volumes:
      - ${CONF_PATH}/cross-seed-movies:/config
      - ${DATA_PATH}/movies:/data/movies
      - ${CONF_PATH}/qbit-movies/data/BT_backup:/torrents-movies
  cross-seed-tv:
    <<: *base-media
    command: daemon
    container_name: cross-seed-tv
    depends_on:
      - qbit-tv
      - prowlarr
    hostname: cross-seed-tv.internal
    environment:
      TZ: ${TZ}
    image: crossseed/cross-seed:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Ptyx6sC/crossseed.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/mmgoodnow/cross-seed/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/Ptyx6sC/crossseed.png"
    user: ${PUID}:${PGID}
    volumes:
      - ${CONF_PATH}/cross-seed-tv:/config
      - ${DATA_PATH}/tv:/data/tv
      - ${CONF_PATH}/qbit-tv/data/BT_backup:/torrents-tv
  dockerproxy:
    <<: *base-misc
    container_name: dockerproxy
    environment:
      <<: *env
      POST: 0
      CONTAINERS: 1
      INFO: 1
    hostname: dockerproxy.internal
    image: lscr.io/linuxserver/socket-proxy:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/WnBdBh0/docker-sock.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/linuxserver/docker-socket-proxy/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/WnBdBh0/docker-sock.png"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  dozzle:
    <<: *base-default
    container_name: dozzle
    depends_on:
      wireguard:
        condition: service_healthy
        restart: true
      dockerproxy:
        condition: service_started
    #hostname: dozzle.internal
    environment:
      <<: *env
      DOCKER_HOST: "tcp://dockerproxy:2375"
      DOZZLE_HOSTNAME: unraid
      DOZZLE_REMOTE_AGENT: 192.168.30.3:7007,10.0.20.2:7007
      #DOZZLE_REMOTE_HOST: "tcp://10.0.20.2:2375"
    image: amir20/dozzle:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/fxHzwwS/dozzle.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/amir20/dozzle/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/fxHzwwS/dozzle.png"
    network_mode: service:wireguard
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock
  fail2ban:
    <<: *base-default
    cap_add:
      - NET_ADMIN
      - NET_RAW
    container_name: fail2ban
    environment:
      <<: *env
      DISC_HOOK: ${DISC_HOOK}
      DISC_ME: ${DISC_ME}
      DISC_API: ${DISC_API}
      VERBOSITY: -vv
    hostname: fail2ban.internal
    image: lscr.io/linuxserver/fail2ban:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/SVn2mCj/fail2ban.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/linuxserver/docker-fail2ban/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/SVn2mCj/fail2ban.png"
    network_mode: host
    volumes:
      - ${CONF_PATH}/fail2ban:/config
      - ${CONF_PATH}/fail2ban/scripts:/custom-cont-init.d
      - ${CONF_PATH}/authelia:/remotelogs/authelia:ro
      - ${CONF_PATH}/immich/log/nginx:/remotelogs/immich:ro
      - ${CONF_PATH}/jellyseerr/logs:/remotelogs/jellyseerr:ro
      - ${CONF_PATH}/swag/geoip2db:/config/geoip2db
      - ${CONF_PATH}/swag/log/nginx:/remotelogs/nginx:ro
      - ${CONF_PATH}/vaultwarden:/remotelogs/vaultwarden:ro
      - ${CONF_PATH}/webtop/logs/nginx:/remotelogs/webtop:ro
      - /var/log:/remotelogs/unraid:ro
  immich-server:
    <<: *base-misc
    container_name: immich_server
    hostname: immich-server.internal
    image: ghcr.io/immich-app/immich-server:release
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    restart: unless-stopped
    volumes:
      - ${DATA_PATH}/photos/immich:/usr/src/app/upload
      - ${CONF_PATH}/immich/server/thumbs:/usr/src/app/upload/thumbs
      - /etc/localtime:/etc/localtime:ro
    environment:
      <<: *env
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_USER: ${POSTGRES_USER}
      REDIS_HOSTNAME: redis
      REDIS_PORT: 6379
      DB_HOSTNAME: immich-postgres
      MACHINE_LEARNING_WORKERS: 2
      MACHINE_LEARNING_WORKER_TIMEOUT: 120
      DB_DATABASE_NAME: immich
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Rzdj77F/immich.png"
      net.unraid.docker.icon: "https://i.ibb.co/Rzdj77F/immich.png"
    #ports:
      #- 2283:2283
    depends_on:
      - redis
      - immich-postgres
    healthcheck:
      disable: false
  immich-machine-learning:
    <<: *base-misc
    container_name: immich_machine_learning
    device_cgroup_rules:
      - 'c 189:* rmw'
    devices:
      - /dev/dri:/dev/dri
    hostname: immich-machine-learning.internal
    image: ghcr.io/immich-app/immich-machine-learning:release-openvino
    # extends:
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, openvino, openvino-wsl] for accelerated inference
    #ports:
      #- 3003:3003
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Rzdj77F/immich.png"
      net.unraid.docker.icon: "https://i.ibb.co/Rzdj77F/immich.png"
    volumes:
      - ${CONF_PATH}/immich/learning:/cache
      - /dev/bus/usb:/dev/bus/usb
    restart: unless-stopped
    healthcheck:
      disable: false
  immich-postgres:
    <<: *base-misc
    container_name: immich_postgres
    hostname: immich-postgres.internal
    image: ghcr.io/immich-app/postgres:14-vectorchord0.3.0-pgvectors0.2.0
    environment:
      <<: *env
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Rzdj77F/immich.png"
      net.unraid.docker.icon: "https://i.ibb.co/Rzdj77F/immich.png"
    volumes:
      - ${CONF_PATH}/immich/postgres:/var/lib/postgresql/data
    #ports:
      #- 5432:5432
  jellyseerr:
    <<: *base-media
    container_name: jellyseerr
    environment:
      <<: *env
      DB_TYPE: postgres
      DB_HOST: ${POSTGRES_HOST}
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASSWORD}
    hostname: jellyseerr.internal
    image: ghcr.io/hotio/jellyseerr
    labels:
      <<: *pullio
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/fallenbagel/jellyseerr/releases\", \"label\": \"changelog\"}"
      org.hotio.pullio.author.avatar: "https://i.ibb.co/qMqc4MtT/Jellyseerr.png"
      net.unraid.docker.icon: "https://i.ibb.co/qMqc4MtT/Jellyseerr.png"
    #ports:
      #- "5055:5055"
    volumes:
      - ${CONF_PATH}/jellyseerr:/config
      - ${DATA_PATH}/movies/media:/data/movies/media
      - ${DATA_PATH}/tv/media:/data/tv/media
  lidarr:
    <<: *base-media
    container_name: lidarr
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *env
    #image: ghcr.io/hotio/lidarr:nightly
    hostname: lidarr.internal
    image: ghcr.io/hotio/lidarr:pr-plugins
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/nQrWPpB/lidarr.png"
      net.unraid.docker.icon: "https://i.ibb.co/nQrWPpB/lidarr.png"
    #ports:
      #- 8686:8686
    volumes:
      - ${CONF_PATH}/lidarr:/config
      - ${DATA_PATH}/misc:/data/misc
  minecraft:
    <<: *base-default
    container_name: minecraft
    environment:
      EULA: TRUE
      VERSION: LATEST
      UID: ${PUID}
      GID: ${PGID}
      PACKAGE_BACKUP_KEEP: 2
      SERVER_NAME: "Cool Dude Server"
      GAMEMODE: creative
      MAX_PLAYERS: 8
      ONLINE_MODE: true
      LEVEL_TYPE: default
      ENFORCE_WHITELIST: true
      WHITE_LIST_USERS: "dav01624"
      SERVER_PORT: 19132
      OPS: ""
    hostname: minecraft.internal
    image: itzg/minecraft-bedrock-server
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/5WKp9FS/minecraft.jpg"
      net.unraid.docker.icon: "https://i.ibb.co/5WKp9FS/minecraft.jpg"
    network_mode: host
    ports:
      - 127.0.0.1:19132:19132/udp
    restart: unless-stopped
    volumes:
      - ${CONF_PATH}/minecraft:/data
  notifiarr:
    <<: *base-media
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    container_name: notifiarr
    devices:
      - /dev/sda:/dev/sda
      - /dev/sdb:/dev/sdb
      - /dev/sdc:/dev/sdc
      - /dev/sdd:/dev/sdd
      - /dev/sde:/dev/sde
      - /dev/sdf:/dev/sdf
      - /dev/sdg:/dev/sdg
      - /dev/sdh:/dev/sdh
      - /dev/sdi:/dev/sdi
      - /dev/sdj:/dev/sdj
      - /dev/sdk:/dev/sdk
      - /dev/sdl:/dev/sdl
      - /dev/sdm:/dev/sdm
      - /dev/sdn:/dev/sdn
      - /dev/sdo:/dev/sdo
      - /dev/sdp:/dev/sdp
      - /dev/sdq:/dev/sdq
      - /dev/sdr:/dev/sdr
      - /dev/sds:/dev/sds
      - /dev/sdt:/dev/sdt
      - /dev/sdu:/dev/sdu
      - /dev/sdv:/dev/sdv
      - /dev/sdw:/dev/sdw
      - /dev/sdx:/dev/sdx
      - /dev/sdy:/dev/sdy
      - /dev/sdz:/dev/sdz
      - /dev/nvme0n1:/dev/nvme0n1
      - /dev/nvme1n1:/dev/nvme1n1
      - /dev/nvme2n1:/dev/nvme2n1
    environment:
      TZ: ${TZ}
    hostname: davo1624
    image: ghcr.io/notifiarr/notifiarr:unstable
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://notifiarr.com/images/logo_100x100.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/Notifiarr/notifiarr/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://notifiarr.com/images/logo_100x100.png"
    ports:
      - 5454:5454
    privileged: true
    volumes:
      - ${CONF_PATH}/notifiarr:/config
      - ${CONF_PATH}/overseerr/logs:/remotelogs/overseerr:ro
      - ${CONF_PATH}/radarr/logs:/remotelogs/radarr:ro
      - ${CONF_PATH}/radarr-4k/logs:/remotelogs/radarr-4k:ro
      - ${CONF_PATH}/sonarr/logs:/remotelogs/sonarr:ro
      - ${CONF_PATH}/lidarr/logs:/remotelogs/lidarr:ro
      - ${CONF_PATH}/readarr/logs:/remotelogs/readarr:ro
      - ${CONF_PATH}/prowlarr/logs:/remotelogs/prowlarr:ro
      - /var/run/utmp:/var/run/utmp
      - /mnt/user:/storage/1
  orpheusbetter:
    <<: *base-misc
    container_name: orpheusbetter
    environment:
      <<: *env
    image: ghcr.io/quorn23/orpheusbetter-docker:master
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/kyqJMwy/orpheus.jpg"
      net.unraid.docker.icon: "https://i.ibb.co/kyqJMwy/orpheus.jpg"
    restart: no
    volumes:
      - ${CONF_PATH}/orpheusbetter:/config/.orpheusbetter
      - ${DATA_PATH}/misc/music/torrents/.uploads:/data/misc/music/torrents/.uploads
  pgbackups:
    <<: *base-media
    container_name: pgbackups
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      BACKUP_DIR: /backups
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_DB: "authelia autobrr autopulse jellyseerr lidarr-main prowlarr-main radarr-main radarr-4k-main readarr-main sonarr-main vaultwarden"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SCHEDULE: "@daily"
      BACKUP_KEEP_DAYS: 7
      BACKUP_KEEP_WEEKS: 4
      BACKUP_KEEP_MONTHS: 6
      HEALTHCHECK_PORT: 8080
    hostname: pgbackups.internal
    image: prodrigestivill/postgres-backup-local
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/XSmQBNC/database-postgres.jpg"
      net.unraid.docker.icon: "https://i.ibb.co/XSmQBNC/database-postgres.jpg"
    user: postgres:postgres
    volumes:
      - /mnt/backups/appdata/postgres:/backups
      - ${CONF_PATH}/pgbackups:/var/lib/postgresql/data
  plex:
    <<: *base-default
    container_name: plex
    devices:
      - /dev/dri:/dev/dri
    environment:
      <<: *env
      #- PLEX_CLAIM_TOKEN=${PLEX_CLAIM}
      PLEX_NO_AUTH_NETWORKS: ${ALLOWED_NETWORKS}
      PLEX_ADVERTISE_URL: ${ADVERTISE_IP}
      PLEX_BETA_INSTALL: true
      PLEX_PURGE_CODECS: true
      PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR: "/app/config"
      DEBUG: no
      #- NVIDIA_VISIBLE_DEVICES=GPU-cb6c8b8e-2662-a4d2-6afd-a37a5bf5e0be
      #- NVIDIA_DRIVER_CAPABILITIES=compute,video,utility
    hostname: plex.internal
    image: ghcr.io/hotio/plex:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/n8gP7gh/plex.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://https://github.com/linuxserver/docker-plex/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/n8gP7gh/plex.png"
    network_mode: host
    #ports:
      #- 32400:32400
      #- 1900:1900/udp #DLNA
      #- 32410:32410/udp #GDM network
      #- 32412-32414:32412-32414/udp #GDM network
      #- 32469:32469 #DLNA
    #runtime: nvidia
    volumes:
      - ${CONF_PATH}/plex:/config
      - ${CONF_PATH}/swag/etc:/swag-ssl:ro
      - ${DATA_PATH}/movies/media:/data/movies/media
      - ${DATA_PATH}/tv/media:/data/tv/media
      - ${DATA_PATH}/misc/music/media:/data/misc/music/media
      - ${DATA_PATH}/misc/music/media-unsorted:/data/misc/music/media-unsorted
      - /tmp/plex:/transcode
  plex-cleanup:
    <<: *base-media
    container_name: pcu
    environment:
      TZ: ${TZ}
      PLEX_PATH: /plex-appdata
      MODE: remove
      PLEX_URL: "http://192.168.20.6:32400"
      PLEX_TOKEN: ${PLEX_TOKEN}
      PHOTO_TRANSCODER: true
      EMPTY_TRASH: true
      CLEAN_BUNDLES: true
      OPTIMIZE_DB: true
      DISCORD: "https://discord.com/api/webhooks/webhook"
      SLEEP: 30
      SCHEDULE: "02:45|daily"
    hostname: plex-cleanup.internal
    image: kometateam/imagemaid
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/VJp47kj/plex-image-cleanup.jpg"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/meisnate12/Plex-Image-Cleanup/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/VJp47kj/plex-image-cleanup.jpg"
    user: ${PUID}:${PGID}
    volumes:
      - ${CONF_PATH}/pcu:/config
      - ${CONF_PATH}/plex:/plex-appdata
  plex-meta-manager:
    <<: *base-media
    container_name: pmm
    environment:
      PMM_TIME: "07:00"
      PMM_DIVIDER: "="
      PMM_WIDTH: 200
      TZ: ${TZ}
    hostname: plex-meta-manager.internal
    image: kometateam/kometa:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/VDnX2MT/plex-meta-manager.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/meisnate12/Plex-Meta-Manager/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/VDnX2MT/plex-meta-manager.png"
    user: ${PUID}:${PGID}
    volumes:
      - ${CONF_PATH}/pmm:/config
  portainer:
    <<: *base-misc
    container_name: portainer
    environment:
      VIRTUAL_PORT: 9000
      VIRTUAL_HOST: portainer.${DOMAIN}
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    hostname: portainer.internal
    image: portainer/portainer-ce:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/wNvTzYV/portainer.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/portainer/portainer/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/wNvTzYV/portainer.png"
    mac_address: "02:42:ac:11:00:06"
    #ports:
      #- 9443:9443
      #- 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONF_PATH}/portainer:/data
  postgres:
    <<: *base-default
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: "GMT-4"
      PGTZ: "GMT-4"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3
    hostname: postgres.internal
    image: pgautoupgrade/pgautoupgrade:latest
    labels:
      <<: *pullio
      org.hotio.pullio.update: false #prevent auto-update
      org.hotio.pullio.author.avatar: "https://i.ibb.co/NCgNfC8/pgadmin.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://www.postgresql.org/docs/release/\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/NCgNfC8/pgadmin.png"
    networks:
      - misc
      - media
    restart: unless-stopped
    shm_size: 1g
    #user: ${PUID}:${PGID}
    volumes:
      - ${CONF_PATH}/postgres:/var/lib/postgresql/data
  powershell:
    <<: *base-default
    container_name: powershell
    environment:
      <<: *env
    image: mcr.microsoft.com/powershell:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/KVW35hR/Power-Shell-5-0-icon.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/RafhaanShah/Container-Mon/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/KVW35hR/Power-Shell-5-0-icon.png"
    networks:
      - media
    restart: no
    volumes:
      - ${CONF_PATH}/scripts/upgradinatorr:/scripts
    command: "pwsh /scripts/upgradinatorr.ps1 -apps Radarr -verbose"
  prowlarr:
    <<: *base-media
    container_name: prowlarr
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *env
    image: ghcr.io/hotio/prowlarr:nightly
    hostname: prowlarr.internal
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://notifiarr.com/images/logo/prowlarr.png"
      net.unraid.docker.icon: "https://notifiarr.com/images/logo/prowlarr.png"
    volumes:
      - ${CONF_PATH}/prowlarr:/config
  qbit-manage:
    <<: *base-media
    container_name: qbit-manage
    environment:
      <<: *env
      QBT_SCHEDULE: 60
      QBT_STARTUP_DELAY: 30
      QBT_CONFIG: config_*.yml
      QBT_LOGFILE: /config/logs/qbitmanage.log
      #QBT_TRACE: true
    hostname: qbit-manage.internal
    image: ghcr.io/hotio/qbitmanage:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/w74ZSL5/qbitmanage.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/StuffAnThings/qbit_manage/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/w74ZSL5/qbitmanage.png"
    volumes:
      - ${CONF_PATH}/qbm:/config
      - ${CONF_PATH}/qbit-misc/data/BT_backup:/torrents-misc
      - ${CONF_PATH}/qbit-movies/data/BT_backup:/torrents-movies
      - ${CONF_PATH}/qbit-tv/data/BT_backup:/torrents-tv
      - ${DATA_PATH}/movies/torrents:/data/movies/torrents
      - ${DATA_PATH}/tv/torrents:/data/tv/torrents
      - ${DATA_PATH}/misc/torrents:/data/misc/torrents
  qbit-movies:
    <<: *base-default
    cap_add:
      - NET_ADMIN
    container_name: qbit-movies
    depends_on:
      vpn-client:
        condition: service_healthy
    environment:
      <<: *env
      VPN_ENABLED: false
      WEBUI_PORTS: "8083/tcp"
    healthcheck:
      test: curl --fail https://icanhazip.com || exit 1
      interval: 15s
      retries: 5
      start_period: 20s
      timeout: 10s
    #hostname: qbit-movies.internal
    image: docker.io/hotio/qbittorrent:release-5.0.4
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Tq7Tcz8/qbittorrent.png"
      net.unraid.docker.icon: "https://i.ibb.co/Tq7Tcz8/qbittorrent.png"
    network_mode: container:vpn-client
    volumes:
      - ${CONF_PATH}/qbit-movies:/config
      - ${DATA_PATH}/movies/torrents:/data/movies/torrents
  qbit-misc:
    <<: *base-default
    container_name: qbit-misc
    depends_on:
      vpn-client:
        condition: service_healthy
    environment:
      <<: *env
      VPN_ENABLED: false
      WEBUI_PORTS: "8084/tcp"
    healthcheck:
      test: curl --fail https://icanhazip.com || exit 1
      interval: 15s
      retries: 5
      start_period: 20s
      timeout: 10s
    #hostname: qbit-misc.internal
    image: docker.io/hotio/qbittorrent:release-5.0.4
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Tq7Tcz8/qbittorrent.png"
      net.unraid.docker.icon: "https://i.ibb.co/Tq7Tcz8/qbittorrent.png"
    network_mode: container:vpn-client
    volumes:
      - ${CONF_PATH}/qbit-misc:/config
      - ${DATA_PATH}/misc/torrents:/data/misc/torrents
  qbit-tv:
    <<: *base-default
    container_name: qbit-tv
    depends_on:
      vpn-client:
        condition: service_healthy
    environment:
      <<: *env
      VPN_ENABLED: false
      WEBUI_PORTS: "8082/tcp"
    healthcheck:
      test: curl --fail https://icanhazip.com || exit 1
      interval: 15s
      retries: 5
      start_period: 20s
      timeout: 10s
    #hostname: qbit-tv.internal
    image: docker.io/hotio/qbittorrent:release-5.0.4
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/Tq7Tcz8/qbittorrent.png"
      net.unraid.docker.icon: "https://i.ibb.co/Tq7Tcz8/qbittorrent.png"
    network_mode: container:vpn-client
    volumes:
      - ${CONF_PATH}/qbit-tv:/config
      - ${DATA_PATH}/tv/torrents:/data/tv/torrents
  radarr:
    <<: *base-media
    container_name: radarr
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *env
    hostname: radarr.internal
    image: ghcr.io/hotio/radarr:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/ZNZFvGr/radarr.png"
      net.unraid.docker.icon: "https://i.ibb.co/ZNZFvGr/radarr.png"
    #ports:
      #- 7878:7878
    volumes:
      - ${CONF_PATH}/radarr:/config
      - ${DATA_PATH}/movies:/data/movies
  radarr-4k:
    <<: *base-media
    container_name: radarr-4k
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *env
    hostname: radarr-4k.internal
    image: ghcr.io/hotio/radarr:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/ZNZFvGr/radarr.png"
      net.unraid.docker.icon: "https://i.ibb.co/ZNZFvGr/radarr.png"
    #ports:
      #- 7879:7878
    volumes:
      - ${CONF_PATH}/radarr-4k:/config
      - ${CONF_PATH}/radarr-4k/99-install-dependencies.sh:/etc/cont-init.d/99-install-dependencies.sh
      - ${DATA_PATH}/movies:/data/movies
  readarr:
    <<: *base-media
    container_name: readarr
    depends_on:
      - calibre
      - postgres
    environment:
      <<: *env
    hostname: readarr.internal
    image: ghcr.io/hotio/readarr:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/4TYxfXr/readarr.png"
      net.unraid.docker.icon: "https://i.ibb.co/4TYxfXr/readarr.png"
    volumes:
      - ${CONF_PATH}/readarr:/config
      - ${DATA_PATH}/misc:/data/misc
  redis:
    <<: *base-misc
    container_name: redis
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    hostname: redis.internal
    image: redis:alpine
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/fHGHz6L/redis.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/redis/redis/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/fHGHz6L/redis.png"
    volumes:
      - ${CONF_PATH}/redis:/data
  restic:
    <<: *base-misc
    container_name: restic
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BACKUP_CRON: 45 4 */2 * *
      RESTIC_REPOSITORY: ${RESTIC_REPOSITORY}
      RESTIC_PASSWORD: ${RESTIC_PASSWORD}
      RESTIC_TAG: appdata
      RESTIC_FORGET_ARGS: --keep-daily 1
      TZ: ${TZ}
    hostname: restic.internal
    image: ghcr.io/lobaro/restic-backup-docker:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/lobaro/restic-backup-docker/releases\", \"label\": \"changelog\"}" 
      org.hotio.pullio.author.avatar: "https://i.ibb.co/52P4CMx/restic.jpg"
      net.unraid.docker.icon: "https://i.ibb.co/52P4CMx/restic.jpg"
    volumes:
      - ${BACKUP_PATH}:/data
  sabnzbd:
    <<: *base-media
    container_name: sabnzbd
    environment:
      <<: *env
    hostname: sabnzbd.internal
    image: ghcr.io/hotio/sabnzbd:testing
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/VJ3ZCFK/icon.png"
      net.unraid.docker.icon: "https://i.ibb.co/VJ3ZCFK/icon.png"
   #ports:
     #- 9090:8080
    volumes:
      - ${CONF_PATH}/sabnzbd:/config
      - /mnt/cache/data:/data
      - /tmp/sabnzbd:/temp
  slskd:
    <<: *base-default
    container_name: slskd
    depends_on:
      vpn-client:
        condition: service_healthy
    environment:
      SLSKD_DOWNLOADS_DIR: '/data/misc/music/soulseek'
      SLSKD_INCOMPLETE_DIR: '/data/misc/music/soulseek/.incomplete'
      SLSKD_SHARED_DIR: '/data/misc/music/media;/data/misc/music/media-unsorted'
      SLSKD_UPLOAD_SLOTS: 3
      SLSKD_SLSK_USERNAME: ${SLSK_USERNAME}
      SLSKD_SLSK_PASSWORD: ${SLSK_PASSWORD}
      SLSKD_SLSK_LISTEN_PORT: 50300
      SLSKD_HTTP_PORT: 5030
      SLSKD_NO_AUTH: true
      SLSKD_REMOTE_CONFIGURATION: true
      SLSKD_SLSK_NO_DNET: false
      SLSKD_SLSK_DNET_NO_CHILDREN: false
      SLSKD_SLSK_DNET_CHILDREN: 50
      SLSKD_SLSK_DESCRIPTION: 'slskd https://github.com/slskd/slskd If you queue up more than a few albums at a time you will be banned'
      SLSKD_DISK_LOGGER: false
    #hostname: slskd.internal
    image: slskd/slskd:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/slskd/slskd/releases\", \"label\": \"changelog\"}"
      org.hotio.pullio.author.avatar: "https://i.ibb.co/HGzzQZ5/soulseek.png"
      net.unraid.docker.icon: "https://i.ibb.co/HGzzQZ5/soulseek.png"
    network_mode: container:vpn-client
    user: ${PUID}:${PGID}
    volumes:
      - ${CONF_PATH}/slskd:/app
      - ${DATA_PATH}/misc/music:/data/misc/music
  sonarr:
    <<: *base-media
    container_name: sonarr
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      <<: *env
    hostname: sonarr.internal
    image: ghcr.io/hotio/sonarr:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/3h0x1y2/sonarr.png"
      net.unraid.docker.icon: "https://i.ibb.co/3h0x1y2/sonarr.png"
    #ports:
      #- 8989:8989
    volumes:
      - ${CONF_PATH}/sonarr:/config
      - ${DATA_PATH}/tv:/data/tv
  swag:
    <<: *base-default
    cap_add:
      - NET_ADMIN
    container_name: swag
    depends_on:
      wireguard:
        condition: service_healthy
        restart: true
    environment:
      <<: *env
      URL: ${DOMAIN}
      SUBDOMAINS: wildcard
      VALIDATION: dns
      DNSPLUGIN: cloudflare
      #EXTRA_DOMAINS: ${EXTRA_DOMAINS}
      EMAIL: ${EMAIL}
      ONLY_SUBDOMAINS: false
      MAXMINDDB_LICENSE_KEY: ${MAXMINDDB_KEY}
      MAXMINDDB_USER_ID: ${MAXMINDDB_ID}
      DOCKER_MODS: linuxserver/mods:swag-cloudflare-real-ip|linuxserver/mods:swag-f2bdiscord|linuxserver/mods:swag-maxmind
      DISC_HOOK: ${DISC_HOOK}
      DISC_ME: ${DISC_ME}
      DISC_API: ${DISC_API}
      DISABLE_F2B: true
      SWAG_AUTORELOAD: true
      #FILE__CF_TUNNEL_CONFIG=/config/config.yml
      #CF_ZONE_ID=${CF_ZONE_ID}
      #CF_ACCOUNT_ID=${CF_ACCOUNT_ID}
      #CF_API_TOKEN=${CF_SWAG_TOKEN}
      #CF_TUNNEL_NAME=${CF_TUNNEL_NAME}
      #CF_TUNNEL_PASSWORD=${CF_TUNNEL_PASSWORD}
      #CF_TUNNEL_CONFIG: |
          #ingress:
            #- hostname: ${URL}
              #service: http://localhost:80
            #- service: http_status:404
    #hostname: swag.internal
    image: lscr.io/linuxserver/swag:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/nw5w038/swag.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/linuxserver/docker-swag/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/nw5w038/swag.png"
    network_mode: container:wireguard
    #networks:
      #- media
      #- misc
    #ports:
      #- 443:443
      #- 80:80
    restart: unless-stopped
    volumes:
      - ${CONF_PATH}/swag:/config
      - ${CONF_PATH}/swag/config/log/debug:/var/log/letsencrypt
  tautulli:
    <<: *base-media
    container_name: tautulli
    environment:
      <<: *env
    hostname: tautulli.internal
    image: ghcr.io/hotio/tautulli:testing
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/4d5DF9m/tautulli.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/Tautulli/Tautulli/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/4d5DF9m/tautulli.png"
    volumes:
      - ${CONF_PATH}/tautulli:/config
  trailarr:
    <<: *base-default
    container_name: trailarr
    devices:
      - /dev/dri:/dev/dri
    environment:
      <<: *env
      WEBUI_DISABLE_AUTH: True
    #hostname: trailarr.internal
    image: nandyalu/trailarr:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/7xzCS0TC/Trailarr.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/nandyalu/trailarr/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/7xzCS0TC/Trailarr.png"
    network_mode: container:vpn-client
    volumes:
      - ${CONF_PATH}/trailarr:/config
      - ${DATA_PATH}/movies/media:/data/movies/media
      - ${DATA_PATH}/tv/media:/data/tv/media
  unpackerr:
    <<: *base-media
    container_name: unpackerr
    environment:
      UMASK: 002
    hostname: unpackerr.internal
    image: ghcr.io/hotio/unpackerr:nightly
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/v3NRWs5/unpackerr.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/davidnewhall/unpackerr/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/v3NRWs5/unpackerr.png"
    security_opt:
      - no-new-privileges:true
    volumes:
      - ${CONF_PATH}/unpackerr:/config
      - ${DATA_PATH}/movies:/data/movies
      - ${DATA_PATH}/tv/:/data/tv
      - ${DATA_PATH}/misc/music:/data/misc/music
  vaultwarden:
    <<: *base-misc
    container_name: bitwarden
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
      ROCKET_ENV: staging
      ROCKET_PORT: 80
      ROCKET_WORKERS: 10
      DOMAIN: https://bitwarden.${DOMAIN}
      WEBSOCKET_ENABLED: true
      WEB_VAULT_ENABLED: true
      LOG_FILE: /data/vaultwarden.log
      TZ: ${TZ}
      SERVER_ADMIN_EMAIL: ${EMAIL}
      SIGNUPS_ALLOWED: true
      SIGNUPS_VERIFY: true
      INVITATIONS_ALLOWED: true
      ADMIN_TOKEN: ${ADMIN_TOKEN}
      DATABASE_URL: "postgresql://postgres:docker@postgres:5432/vaultwarden"
    hostname: vaultwarden.internal
    image: vaultwarden/server:latest
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/nMXr6fh/bitwarden.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/dani-garcia/vaultwarden/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/nMXr6fh/bitwarden.png"
    mac_address: "02:42:ac:11:00:05"
    #ports:
      #- 4743:80
    volumes:
      - ${CONF_PATH}/vaultwarden:/data
  vpn-client:
    <<: *base-media
    cap_add:
      - NET_ADMIN
    container_name: vpn-client
    environment:
      <<: *env
      VPN_ENABLED: "true"
      VPN_CONF: "wg0"
      VPN_PROVIDER: "generic"
      VPN_LAN_NETWORK: "192.168.30.0/24"
      VPN_LAN_LEAK_ENABLED: "false"
      VPN_EXPOSE_PORTS_ON_LAN:
      VPN_AUTO_PORT_FORWARD: "true"
      VPN_AUTO_PORT_FORWARD_TO_PORTS:
      VPN_FIREWALL_TYPE: "auto"
      VPN_NAMESERVERS: "wg"
      PRIVOXY_ENABLED: "true"
      #VPN_HEALTHCHECK_ENABLED: true
      #VPN_IP_CHECK_EXIT: false
    healthcheck:
      test: curl --fail https://icanhazip.com || exit 1
      interval: 15s
      retries: 5
      start_period: 20s
      timeout: 10s
    hostname: vpn-client.internal
    image: ghcr.io/hotio/base:alpinevpn
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/MxZBnc8t/Alpine.png"
      net.unraid.docker.icon: "https://i.ibb.co/MxZBnc8t/Alpine.png"
    ports:
      - 5030:5030 #soulseek
      - 7889:7889 #trailarr
      - 8082:8082 #qbit-tv
      - 8083:8083 #qbit-movies
      - 8084:8084 #qbit-misc
      - 8118:8118 #privoxy
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
      net.ipv6.conf.all.disable_ipv6: 1
    volumes:
      - ${CONF_PATH}/vpn-client:/config
  webtop:
    <<: *base-misc
    container_name: webtop
    devices:
      - /dev/dri:/dev/dri
    environment:
      <<: *env
      CUSTOM_USER: ${HOST}
      PASSWORD: ${POSTGRES_PASSWORD}
      SUBFOLDER: /
      TITLE: Webtop
    hostname: webtop.internal
    image: lscr.io/linuxserver/webtop:debian-kde
    labels:
      <<: *pullio
      org.hotio.pullio.author.avatar: "https://i.ibb.co/N7f1CRT/webtop.png"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/linuxserver/docker-webtop/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/N7f1CRT/webtop.png"
    #ports:
      #- 3000:3000
      #- 3001:3001
    shm_size: 1gb
    volumes:
      - ${CONF_PATH}/webtop:/config
      - ${CONF_PATH}/webtop/logs/nginx:/var/log/nginx
      - ${DATA_PATH}:/data
  wireguard:
    <<: *base-default
    cap_add:
      - NET_ADMIN
    container_name: wireguard
    healthcheck:
      test: ["CMD-SHELL", "ping -c 1 10.0.20.2 | grep '1 received'"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    environment:
      <<: *env
      SERVERURL: ${WIREGUARD_URL}
      SERVERPORT: 51821
      PEERS: 2
      PEERDNS: "auto"
      INTERNAL_SUBNET: 10.0.20.0
      ALLOWEDIPS: 10.0.20.0/24
      PERSISTENTKEEPALIVE_PEERS: "all"
      LOG_CONFS: "true"
      #USE_COREDNS: "false"
    hostname: wireguard.internal
    image: lscr.io/linuxserver/wireguard:latest
    labels:
      org.hotio.pullio.notify: true
      org.hotio.pullio.update: false
      org.hotio.pullio.generic.webhook: ${PULLIO_GENERIC_WEBHOOK}
      org.hotio.pullio.author.avatar: "https://i.ibb.co/W2th3Kt/wireguard.jpg"
      org.hotio.pullio.author.url: "{\"link\": \"https://github.com/linuxserver/docker-wireguard/releases\", \"label\": \"changelog\"}"
      net.unraid.docker.icon: "https://i.ibb.co/W2th3Kt/wireguard.jpg"
    networks:
      - media
      - misc
    ports:
      - 51821:51820/udp
      - 443:443
      - 80:80
      - 2375:2375 #dockerproxy
      - 8090:8090 #beszel
      - 8080:8080 #dozzle
      #- 45876:45876 #beszel-agent
      #- 45877:45877 #beszel-agent-racknerd
    restart: unless-stopped
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    volumes:
      - ${CONF_PATH}/wireguard:/config
      - /lib/modules:/lib/modules
networks:
  media:
    external: true
  misc:
    external: true
